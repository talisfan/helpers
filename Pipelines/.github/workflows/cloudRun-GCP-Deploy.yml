name: PROD CI/CD
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ closed ]
  workflow_dispatch:
env: 
  GCP_REGION: us-east4
  APP_NAME: app_name
  GCP_PROJECT_ID: projeto-base-XXXX
  GCP_REGISTRY_IMAGES: us-east4-docker.pkg.dev
jobs:
  CI:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --force
        
    - name: Build
      run: npm run build

    - name: Configure Docker login
      uses: docker/login-action@v1
      with:
        registry: ${{ env.GCP_REGISTRY_IMAGES }}
        username: _json_key
        password: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.GCP_REGISTRY_IMAGES }}/${{ env.GCP_PROJECT_ID }}/docker-images-repo/${{ env.APP_NAME }} .
        docker push ${{ env.GCP_REGISTRY_IMAGES }}/${{ env.GCP_PROJECT_ID }}/docker-images-repo/${{ env.APP_NAME }}
  CD:
    runs-on: ubuntu-latest
    needs: CI
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.APP_NAME }} \
          --image ${{ env.GCP_REGISTRY_IMAGES }}/${{ env.GCP_PROJECT_ID }}/docker-images-repo/${{ env.APP_NAME }} \
          --platform managed \
          --region ${{ env.GCP_REGION }} 